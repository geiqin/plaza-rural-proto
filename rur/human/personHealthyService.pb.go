// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: personHealthyService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//健康状况
type PersonHealthy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	PersonId       int64   `protobuf:"varint,2,opt,name=person_id,json=personId,proto3" json:"person_id"`
	RealName       string  `protobuf:"bytes,3,opt,name=real_name,json=realName,proto3" json:"real_name"`
	IdCard         string  `protobuf:"bytes,4,opt,name=id_card,json=idCard,proto3" json:"id_card"`
	HealthyStates  string  `protobuf:"bytes,5,opt,name=healthy_states,json=healthyStates,proto3" json:"healthy_states"`
	ChronicDisease string  `protobuf:"bytes,6,opt,name=chronic_disease,json=chronicDisease,proto3" json:"chronic_disease"`
	SeriousDisease string  `protobuf:"bytes,7,opt,name=serious_disease,json=seriousDisease,proto3" json:"serious_disease"`
	SignService    string  `protobuf:"bytes,8,opt,name=sign_service,json=signService,proto3" json:"sign_service"`
	Status         string  `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
	CreatedAt      string  `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt      string  `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Person         *Person `protobuf:"bytes,12,opt,name=person,proto3" json:"person"`
}

func (x *PersonHealthy) Reset() {
	*x = PersonHealthy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_personHealthyService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonHealthy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonHealthy) ProtoMessage() {}

func (x *PersonHealthy) ProtoReflect() protoreflect.Message {
	mi := &file_personHealthyService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonHealthy.ProtoReflect.Descriptor instead.
func (*PersonHealthy) Descriptor() ([]byte, []int) {
	return file_personHealthyService_proto_rawDescGZIP(), []int{0}
}

func (x *PersonHealthy) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PersonHealthy) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *PersonHealthy) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *PersonHealthy) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *PersonHealthy) GetHealthyStates() string {
	if x != nil {
		return x.HealthyStates
	}
	return ""
}

func (x *PersonHealthy) GetChronicDisease() string {
	if x != nil {
		return x.ChronicDisease
	}
	return ""
}

func (x *PersonHealthy) GetSeriousDisease() string {
	if x != nil {
		return x.SeriousDisease
	}
	return ""
}

func (x *PersonHealthy) GetSignService() string {
	if x != nil {
		return x.SignService
	}
	return ""
}

func (x *PersonHealthy) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PersonHealthy) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PersonHealthy) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *PersonHealthy) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

type PersonHealthyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged            int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize         int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting          string `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"` //----
	Status           string `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
	Keywords         string `protobuf:"bytes,5,opt,name=keywords,proto3" json:"keywords"`
	ComparisonStatus string `protobuf:"bytes,6,opt,name=comparison_status,json=comparisonStatus,proto3" json:"comparison_status"`
	PersonId         int64  `protobuf:"varint,7,opt,name=person_id,json=personId,proto3" json:"person_id"`
	FamilyId         int64  `protobuf:"varint,9,opt,name=family_id,json=familyId,proto3" json:"family_id"`
}

func (x *PersonHealthyRequest) Reset() {
	*x = PersonHealthyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_personHealthyService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonHealthyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonHealthyRequest) ProtoMessage() {}

func (x *PersonHealthyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_personHealthyService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonHealthyRequest.ProtoReflect.Descriptor instead.
func (*PersonHealthyRequest) Descriptor() ([]byte, []int) {
	return file_personHealthyService_proto_rawDescGZIP(), []int{1}
}

func (x *PersonHealthyRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *PersonHealthyRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PersonHealthyRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *PersonHealthyRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PersonHealthyRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *PersonHealthyRequest) GetComparisonStatus() string {
	if x != nil {
		return x.ComparisonStatus
	}
	return ""
}

func (x *PersonHealthyRequest) GetPersonId() int64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *PersonHealthyRequest) GetFamilyId() int64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

type PersonHealthyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PersonHealthy   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager    `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*PersonHealthy `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   *common.Info     `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *PersonHealthyData) Reset() {
	*x = PersonHealthyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_personHealthyService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonHealthyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonHealthyData) ProtoMessage() {}

func (x *PersonHealthyData) ProtoReflect() protoreflect.Message {
	mi := &file_personHealthyService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonHealthyData.ProtoReflect.Descriptor instead.
func (*PersonHealthyData) Descriptor() ([]byte, []int) {
	return file_personHealthyService_proto_rawDescGZIP(), []int{2}
}

func (x *PersonHealthyData) GetEntity() *PersonHealthy {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *PersonHealthyData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *PersonHealthyData) GetItems() []*PersonHealthy {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PersonHealthyData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type PersonHealthyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *PersonHealthyData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error      `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *PersonHealthyResponse) Reset() {
	*x = PersonHealthyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_personHealthyService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonHealthyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonHealthyResponse) ProtoMessage() {}

func (x *PersonHealthyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_personHealthyService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonHealthyResponse.ProtoReflect.Descriptor instead.
func (*PersonHealthyResponse) Descriptor() ([]byte, []int) {
	return file_personHealthyService_proto_rawDescGZIP(), []int{3}
}

func (x *PersonHealthyResponse) GetData() *PersonHealthyData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PersonHealthyResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_personHealthyService_proto protoreflect.FileDescriptor

var file_personHealthyService_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e,
	0x03, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x68,
	0x72, 0x6f, 0x6e, 0x69, 0x63, 0x5f, 0x64, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x44, 0x69, 0x73, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x64,
	0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22,
	0xfe, 0x01, 0x0a, 0x14, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x49, 0x64,
	0x22, 0xba, 0x01, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x52,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x6d, 0x0a,
	0x15, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xc5, 0x03, 0x0a,
	0x14, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x1a, 0x1f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x79, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_personHealthyService_proto_rawDescOnce sync.Once
	file_personHealthyService_proto_rawDescData = file_personHealthyService_proto_rawDesc
)

func file_personHealthyService_proto_rawDescGZIP() []byte {
	file_personHealthyService_proto_rawDescOnce.Do(func() {
		file_personHealthyService_proto_rawDescData = protoimpl.X.CompressGZIP(file_personHealthyService_proto_rawDescData)
	})
	return file_personHealthyService_proto_rawDescData
}

var file_personHealthyService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_personHealthyService_proto_goTypes = []interface{}{
	(*PersonHealthy)(nil),         // 0: services.PersonHealthy
	(*PersonHealthyRequest)(nil),  // 1: services.PersonHealthyRequest
	(*PersonHealthyData)(nil),     // 2: services.PersonHealthyData
	(*PersonHealthyResponse)(nil), // 3: services.PersonHealthyResponse
	(*Person)(nil),                // 4: services.Person
	(*common.Pager)(nil),          // 5: common.Pager
	(*common.Info)(nil),           // 6: common.Info
	(*common.Error)(nil),          // 7: common.Error
}
var file_personHealthyService_proto_depIdxs = []int32{
	4,  // 0: services.PersonHealthy.person:type_name -> services.Person
	0,  // 1: services.PersonHealthyData.entity:type_name -> services.PersonHealthy
	5,  // 2: services.PersonHealthyData.pager:type_name -> common.Pager
	0,  // 3: services.PersonHealthyData.items:type_name -> services.PersonHealthy
	6,  // 4: services.PersonHealthyData.info:type_name -> common.Info
	2,  // 5: services.PersonHealthyResponse.data:type_name -> services.PersonHealthyData
	7,  // 6: services.PersonHealthyResponse.error:type_name -> common.Error
	0,  // 7: services.PersonHealthyService.Create:input_type -> services.PersonHealthy
	0,  // 8: services.PersonHealthyService.Update:input_type -> services.PersonHealthy
	0,  // 9: services.PersonHealthyService.Delete:input_type -> services.PersonHealthy
	0,  // 10: services.PersonHealthyService.Get:input_type -> services.PersonHealthy
	1,  // 11: services.PersonHealthyService.Search:input_type -> services.PersonHealthyRequest
	1,  // 12: services.PersonHealthyService.Export:input_type -> services.PersonHealthyRequest
	3,  // 13: services.PersonHealthyService.Create:output_type -> services.PersonHealthyResponse
	3,  // 14: services.PersonHealthyService.Update:output_type -> services.PersonHealthyResponse
	3,  // 15: services.PersonHealthyService.Delete:output_type -> services.PersonHealthyResponse
	3,  // 16: services.PersonHealthyService.Get:output_type -> services.PersonHealthyResponse
	3,  // 17: services.PersonHealthyService.Search:output_type -> services.PersonHealthyResponse
	3,  // 18: services.PersonHealthyService.Export:output_type -> services.PersonHealthyResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_personHealthyService_proto_init() }
func file_personHealthyService_proto_init() {
	if File_personHealthyService_proto != nil {
		return
	}
	file_personService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_personHealthyService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonHealthy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_personHealthyService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonHealthyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_personHealthyService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonHealthyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_personHealthyService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonHealthyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_personHealthyService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_personHealthyService_proto_goTypes,
		DependencyIndexes: file_personHealthyService_proto_depIdxs,
		MessageInfos:      file_personHealthyService_proto_msgTypes,
	}.Build()
	File_personHealthyService_proto = out.File
	file_personHealthyService_proto_rawDesc = nil
	file_personHealthyService_proto_goTypes = nil
	file_personHealthyService_proto_depIdxs = nil
}
